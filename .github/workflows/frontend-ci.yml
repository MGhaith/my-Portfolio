name: Deploy Frontend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials via OIDC (Terraform)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::075091538636:role/github-oidc-terraform
          aws-region: us-east-1

      - run: terraform init
        working-directory: ./infra
      - run: terraform plan -out=tfplan
        working-directory: ./infra
      - run: terraform apply -auto-approve tfplan
        working-directory: ./infra

  frontend:
    runs-on: ubuntu-latest
    needs: terraform
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "24.6.0"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run Tests
        run: npm run test -- --coverage

      - name: Build React app
        run: npm run build
        working-directory: ./frontend

      - name: Configure AWS credentials via OIDC (Frontend)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::075091538636:role/GitHubActionsFrontendRole
          aws-region: us-east-1

      - name: Sync build to S3
        run: aws s3 sync ./frontend/dist/ s3://ghaith-magherbi.com/ --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E2ID0F0L5RDMX8 \
            --paths "/*"
